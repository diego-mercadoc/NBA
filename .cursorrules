Here's the optimized `.cursorrules` configuration in JSON format with enhanced structure and critical constraints:

```json
{
  "project_context": {
    "core": {
      "project_type": "nba_prediction_system",
      "current_version": "2.1",
      "critical_files": {
        "main": ["nba_predictor.py", "nba_scraper.py"],
        "data": ["nba_games_all.csv", "nba_team_stats_all.csv"],
        "config": [".cursorrules", "pytest.ini"]
      },
      "stability_requirements": {
        "backward_compatibility": true,
        "memory_limit": "4GB",
        "accuracy_threshold": 0.78
      }
    },
    
    "model_rules": {
      "ensemble_config": {
        "weights": {
          "random_forest": 0.4,
          "xgboost": 0.3,
          "lightgbm": 0.3,
          "lock_weights": true
        },
        "validation_metrics": {
          "primary": "accuracy",
          "secondary": ["brier", "log_loss"],
          "thresholds": {
            "accuracy": {"min": 0.78, "target": 0.82},
            "brier": {"max": 0.20},
            "log_loss": {"max": 0.55}
          }
        }
      },
      
      "prediction_safety": {
        "level": 2,
        "dry_run": {
          "enabled": true,
          "max_predictions": 100,
          "validation_dataset": "validation_set.csv",
          "output_file": "dryrun_predictions.json"
        },
        "monitoring": {
          "memory_threshold": 3.8,
          "stability_threshold": 0.95,
          "alert_interval": "2m"
        },
        "auto_rollback": {
          "triggers": {
            "memory": ">3.95GB for 2m",
            "stability": "<90% for 5m",
            "format_errors": "any"
          },
          "recovery": {
            "version": "2.1.0-rc1",
            "backup_models": true
          }
        }
      },
      
      "feature_constraints": {
        "required_features": [
          "Home_Points_Allowed_Roll15",
          "3pt_volatility",
          "pace_adjusted_offense"
        ],
        "value_ranges": {
          "3pt_volatility": [-1, 1],
          "pace_metrics": [50, 150]
        }
      }
    },

    "data_integrity": {
      "validation_rules": {
        "season_handling": {
          "current": "2024-25",
          "minimum_games": {
            "2021": 1000,
            "2024": 500
          }
        },
        "team_stats": {
          "2025_fix": {
            "status": "implemented",
            "resolution": "multi_index_parser_v2"
          }
        },
        "correlation_validation": {
          "min_correlation": 0.6,
          "critical_pairs": [
            ["team_strength", "win_rate"],
            ["recent_form", "streak"],
            ["offensive_rating", "points_scored"]
          ]
        },
        "synthetic_data_quality": {
          "team_strength_range": [0.8, 1.2],
          "required_correlations": {
            "team_strength_win_rate": 0.6,
            "points_scored_ortg": 0.7,
            "recent_form_streak": 0.5
          },
          "temporal_consistency": {
            "max_form_variance": 0.2,
            "streak_continuity": true
          }
        }
      },
      
      "error_handling": {
        "retry_policy": {
          "max_attempts": 5,
          "backoff_strategy": "exponential"
        },
        "critical_errors": {
          "Home_Points_Allowed": {
            "resolution_steps": [
              "verify_scraper_output",
              "check_rolling_calculation",
              "validate_feature_matrix"
            ]
          }
        }
      }
    },

    "development_phases": {
      "current_phase": {
        "name": "Accuracy Optimization",
        "version": "2.1",
        "goals": [
          "Maintain 0.78+ accuracy",
          "Implement feature validation",
          "Ensure Windows compatibility"
        ]
      },
      
      "next_phases": {
        "phase3": {
          "name": "Real-time Prediction",
          "requirements": [
            "Streaming data pipeline",
            "Model performance monitoring"
          ]
        }
      }
    },

    "deployment_rules": {
      "testing_protocol": {
        "pre_commit": [
          "pytest tests/training_stability.py -k 'test_feature_preparation'",
          "memory_check --limit 4GB"
        ],
        "post_deploy": [
          "cross_validation --folds 5",
          "accuracy_monitor --threshold 0.78"
        ]
      },
      
      "version_control": {
        "branch_policy": "accuracy-optimization",
        "commit_rules": {
          "message_format": "[TYPE]: [DESCRIPTION]",
          "required_tests": ["feature_validation", "memory_check"]
        }
      }
    }
  },
  
  "preservation_rules": {
    "untouchable_components": [
      "ensemble_weight_calculation",
      "rolling_statistics_module",
      "windows_memory_manager"
    ],
    
    "change_protocol": {
      "required_approvals": {
        "core_features": 2,
        "model_architecture": 1
      },
      "rollback_plan": {
        "checkpoint": "v2.0_stable",
        "validation": "smoke_test_v1"
      }
    }
  },
  
  "dependencies": {
    "locked_versions": {
      "xgboost": "2.1.3",
      "lightgbm": "4.5.0",
      "scikit-learn": "1.6.1",
      "optuna": "4.1.0"
    },
    "compatibility": {
      "min_python": "3.8",
      "max_memory": "4GB",
      "platform": ["windows", "linux"]
    }
  }
}
```